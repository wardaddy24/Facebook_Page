{"version":3,"sources":["output/fb.png","components/Register.js","components/Dashboard.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Register","props","show1","e","target","name","value","element","document","getElementById","style","display","setState","state","day","month","year","className","src","fb","alt","type","id","placeholder","required","defaultValue","this","disabled","onChange","console","log","classes","optionClasses","alphabet","short","endYearGiven","start","end","class","htmlFor","size","Component","Dashboard","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0a7d9f6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fb.611f6ec2.png\";","import React, { Component } from 'react'\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\nimport '../output/register.css';\r\nimport fb from '../output/fb.png';\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { day:'', month: '', year: '' };\r\n    }\r\n    show1 = e => {\r\n        const { name, value } = e.target;\r\n        const element = document.getElementById('div1');\r\n        if (value === \"custom\"){\r\n            element.style.display='block';\r\n        }\r\n        else{\r\n            element.style.display='none';\r\n        }   \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      };\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n            <div className=\"row main-bg\">    \r\n            <div className=\"col-sm-5 ml-5 mt-5\">\r\n                <h5>Facebook helps you connect and share with the<br/> people in your life.</h5>\r\n                <img src={fb} alt=\"logo\"/>\r\n           \r\n            </div>\r\n            <div className=\"mt-4 ml-4 col-sm-6\">\r\n                <h1>Create an account</h1>\r\n                <h4>It's quick and easy.</h4>\r\n                <form>\r\n                <div className=\"mt-4 row\">\r\n                    <div className=\"col-sm-4\">\r\n                    <input className=\"form-control\" type=\"text\"  id=\"firstName\"  placeholder=\"First name\" required/>\r\n                    </div>\r\n                    &nbsp;&nbsp;\r\n                    <div className=\"col-sm-4\">\r\n                    <input className=\"form-control\" type=\"text\"  id=\"surName\"  placeholder=\"Surname\" required/>\r\n                    </div>                    \r\n                </div>\r\n                <div className=\"mt-3 form-group\">\r\n                    <input type=\"text\" className=\"col-sm-8 form-control\" id=\"emailorphone\"  placeholder=\"Mobile number or email address\" required/>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <input type=\"text\" id=\"password\" className=\"col-sm-8 form-control\" placeholder=\"New password\" required/>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                <h4>Birthday</h4>\r\n                <div>\r\n                <DayPicker\r\n                    defaultValue={10}\r\n                    // mandatory\r\n                    year={this.state.year}\r\n                    // mandatory\r\n                    month={this.state.month}\r\n                    // mandatory if end={} is given in YearPicker\r\n                    //endYearGiven\r\n                    // default is false\r\n                    required={true}\r\n                    // default is false\r\n                    disabled={false}\r\n                    // mandatory\r\n                    value={this.state.day}\r\n                    // mandatory\r\n                    onChange={(day) => {\r\n                        this.setState({ day });\r\n                        console.log(day);\r\n                    }}\r\n                    id={'day'}\r\n                    name={'day'}\r\n                    classes={'classes'}\r\n                    optionClasses={'option classes'}\r\n                    className=\"form-control\"\r\n                />\r\n                <MonthPicker\r\n                    defaultValue={'May'}\r\n                    // to get months as numbers\r\n                    //numeric\r\n                    alphabet\r\n                    // default is full name\r\n                    short\r\n                    // default is Titlecase\r\n                    //caps\r\n                    // mandatory if end={} is given in YearPicker\r\n                    endYearGiven\r\n                    // mandatory\r\n                    year={this.state.year}\r\n                    // default is false\r\n                    required={true}\r\n                    // default is false\r\n                    disabled={false}\r\n                    // mandatory\r\n                    value={this.state.month}\r\n                    // mandatory\r\n                    onChange={(month) => {\r\n                        this.setState({ month });\r\n                        console.log(month);\r\n                    }}\r\n                    id={'month'}\r\n                    name={'month'}\r\n                    classes={'classes'}\r\n                    optionClasses={'option classes'}\r\n                    className=\"form-control\"\r\n                />\r\n                 <YearPicker\r\n                    defaultValue={1995}\r\n                    // default is 1900\r\n                    start={1905}\r\n                    // default is current year\r\n                    end={2020}\r\n                    // default is ASCENDING\r\n                    //reverse\r\n                    // default is false\r\n                    required={true}\r\n                    // default is false\r\n                    disabled={false}\r\n                    // mandatory\r\n                    value={this.state.year}\r\n                    // mandatory\r\n                    onChange={(year) => {\r\n                        this.setState({ year });\r\n                        console.log(year);\r\n                    }}\r\n                    id={'year'}\r\n                    name={'year'}\r\n                    classes={'classes'}\r\n                    optionClasses={'option classes'}\r\n                    className=\"form-control\"\r\n                />\r\n                &nbsp;\r\n                <i class=\"fas fa-question-circle\"></i>\r\n            </div>\r\n            </div>\r\n            <div className=\"mt-2 text-big\">\r\n                <h4>Gender</h4>\r\n                <div>\r\n                <input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\" onChange={this.show1}/>\r\n                <label htmlFor=\"female\">Female</label>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\" onChange={this.show1}/>\r\n                <label htmlFor=\"male\">Male</label>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <input type=\"radio\" id=\"custom\" name=\"gender\" value=\"custom\" onChange={this.show1}/>\r\n                <label htmlFor=\"custom\">Custom</label>&nbsp;\r\n                <i class=\"fas fa-question-circle\"></i>\r\n                </div>\r\n            </div>\r\n            <div id=\"div1\" className=\"none\">\r\n            <select id=\"pronoun\" name=\"pronoun\">\r\n                <option value=\"optional\" defaultValue disabled>Select your pronoun</option>\r\n                <option value=\"she\">She:\"Wish her a happy birthday!\"</option>\r\n                <option value=\"he\">He:\"Wish him a happy birthday!\"</option>\r\n                <option value=\"they\">They:\"Wish them a happy birthday!\"</option>\r\n            </select>\r\n                <h6 className=\"text-format\">Your pronoun is visible to everyone.</h6>\r\n                <input type=\"text\" size= \"45\" id=\"g-optional\"  placeholder=\"Gender (optional)\"/>\r\n            </div>\r\n            <div>\r\n                <h6 className=\"text-format\">By clicking Sign Up, you agree to our Terms, Data Policy and<br/>\r\n                    Cookie Policy. You may receive SMS notifications from us and<br/>\r\n                    can opt out at any time.\r\n                </h6>\r\n            </div>\r\n            <div>\r\n            <input className=\" btn btn-success btn-md pl-5 pr-5 mt-2\" type=\"submit\" value=\"Sign Up\"/>\r\n            </div>\r\n            <div className=\"mt-4\">\r\n                <h6>Create a Page for a celebrity, band or business.</h6>\r\n            </div>\r\n            </form>\r\n            </div>\r\n         </div>  \r\n         </div> \r\n        )\r\n    }\r\n}\r\nexport default  Register;\r\n","import React, { Component } from 'react'\r\nimport '../output/dashboard.css'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        return (\r\n        <div>\r\n            <div className=\"main container-fluid\">\r\n            <div className=\"row\">\r\n            <div className=\"hd-fb-1 col-sm-5 m-auto\">\r\n                <h1>facebook</h1>\r\n            </div>\r\n            <div className=\"d-flex col-sm-6\"> \r\n            <div className=\"row\">\r\n               <div className=\"lb-hd-2  col-sm-5\">\r\n                <label htmlFor=\"login\">Email or phone</label>\r\n                <div>\r\n                    <input type=\"text\" required/>\r\n                </div>\r\n            </div>\r\n            <div className=\"lb-hd-2 col-sm-5\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <div>\r\n                    <input type=\"password\" required/>\r\n                    <h6 className=\"link-1\">Forgotten account?</h6>\r\n                </div>\r\n            </div>\r\n            <div className=\"m-auto\">\r\n                <input type=\"submit\" value=\"Log In\" className=\"btn btn-sm bt-log\"/>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Dashboard;","import React, { Component } from 'react'\r\nimport '../output/footer.css'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"foot\">\r\n                <h4 className=\"text-small\">Facebook&copy;2020</h4>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Footer;","import React from 'react';\nimport Register from '../src/components/Register';\nimport  Dashboard from '../src/components/Dashboard';\nimport  Footer from '../src/components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard/>\n      <Register/>\n      <Footer/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}